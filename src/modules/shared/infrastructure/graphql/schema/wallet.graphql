type Wallet {
  id: ID!
  name: String
  image: String
  balance: Float
  currency: Currency
  company: Company
  cardType: CardType
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Currency {
  id: ID!
  name: String
  symbol: String
}

type Company {
  id: ID!
  name: String
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CardType {
  id: ID!
  name: String
  image: String
}

type Query {
  wallets(criteria: Criteria): [Wallet]
  wallet(id: ID!): Wallet
  currencies(criteria: Criteria): [Currency]
  companies(criteria: Criteria): [Company]
  cardTypes(criteria: Criteria): [CardType]
}

input WalletInput {
  id: ID!
  name: String
  image: String
  balance: Float
  currencyId: ID!
  companyId: ID!
  cardTypeId: ID!
}

type Mutation {
  saveWallet(wallet: WalletInput!): Void
  deleteWallet(id: ID!): Void
}